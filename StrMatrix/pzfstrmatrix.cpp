/* Generated by Together */

#include "pzfstrmatrix.h"
#include "pzfmatrix.h"
#include "pzcmesh.h"
#include "pzsubcmesh.h"
#include <sstream>
#include "pzlog.h"

#ifdef LOG4CXX
static LoggerPtr logger(Logger::getLogger("pz.strmatrix.tpzfstructmatrix"));
static LoggerPtr loggerel(Logger::getLogger("pz.strmatrix.element"));
#endif


using namespace std;

TPZMatrix * TPZFStructMatrix::CreateAssemble(TPZFMatrix &rhs){
    TPZMatrix *stiff = Create();
    int neq = stiff->Rows();
    rhs.Redim(neq,1);
    Assemble(*stiff,rhs);

#ifdef LOG4CXX
	if(loggerel->isDebugEnabled())
	{
		std::stringstream sout;
		stiff->Print("Stiffness matrix",sout);
		rhs.Print("Right hand side", sout);
		LOGPZ_DEBUG(loggerel,sout.str())
	}
#endif
    return stiff;
}

TPZMatrix * TPZFStructMatrix::Create(){
  int neq = fMesh->NEquations();
  if(HasRange())
  {
    neq = fMaxEq-fMinEq;
  }
  else
  {
    fMaxEq = neq;
    fMinEq = 0;
  }
    
  return new TPZFMatrix(neq,neq,0.);
}
TPZFStructMatrix::TPZFStructMatrix(TPZCompMesh *mesh) : TPZStructMatrix(mesh)
{}
TPZStructMatrix * TPZFStructMatrix::Clone(){
    return new TPZFStructMatrix(*this);
}
