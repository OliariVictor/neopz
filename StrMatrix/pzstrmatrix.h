//$Id: pzstrmatrix.h,v 1.3 2007-04-19 11:21:23 tiago Exp $

/* Generated by Together */

#ifndef TPZSTRUCTMATRIX_H
#define TPZSTRUCTMATRIX_H

#include <set>
class TPZCompMesh;
class TPZMatrix;
class TPZFMatrix;

/**
 * Is responsible for a interface among Matrix and Finite Element classes.
 * @ingroup structural
 */
class TPZStructMatrix {

public:    

  TPZStructMatrix(TPZCompMesh *);

  virtual ~TPZStructMatrix();

  virtual TPZMatrix * Create();

  virtual TPZMatrix * CreateAssemble(TPZFMatrix &rhs) = 0;
  virtual TPZMatrix * CreateAssemble(TPZFMatrix &rhs, std::set<int> &MaterialIds);

  virtual TPZStructMatrix * Clone();

  /**
  * Assemble the global system of equations into the matrix which has already been created
  */
  virtual void Assemble(TPZMatrix & mat, TPZFMatrix & rhs, std::set<int> &MaterialIds);
  virtual void Assemble(TPZMatrix & mat, TPZFMatrix & rhs);

  static void Assemble(TPZMatrix & mat, TPZFMatrix & rhs, TPZCompMesh &mesh);
  static void Assemble(TPZFMatrix & rhs, TPZCompMesh &mesh);

public:

protected:

  /**
   * @supplierCardinality 1 
   */
  TPZCompMesh * fMesh;
};
#endif //TPZSTRUCTMATRIX_H
