//$Id: pzstrmatrix.h,v 1.5 2008-03-07 15:04:07 fortiago Exp $

/* Generated by Together */

#ifndef TPZSTRUCTMATRIX_H
#define TPZSTRUCTMATRIX_H

#include <set>
#include "pzvec.h"
class TPZCompMesh;
class TPZMatrix;
class TPZFMatrix;

/**
 * Is responsible for a interface among Matrix and Finite Element classes.
 * @ingroup structural
 */
class TPZStructMatrix {

public:    

  TPZStructMatrix(TPZCompMesh *);
  
  TPZStructMatrix(const TPZStructMatrix &copy)
  {
    fMesh = copy.fMesh;
    fMinEq = copy.fMinEq;
    fMaxEq = copy.fMaxEq;
  }

  virtual ~TPZStructMatrix();

  virtual TPZMatrix * Create();

  virtual TPZMatrix * CreateAssemble(TPZFMatrix &rhs) = 0;

  virtual TPZStructMatrix * Clone();

  /**
  * Assemble the global system of equations into the matrix which has already been created
  */
  virtual void Assemble(TPZMatrix & mat, TPZFMatrix & rhs);
  
  /// Determine that the assembly refers to a range of equations
  void SetEquationRange(int mineq, int maxeq)
  {
    fMinEq = mineq;
    fMaxEq = maxeq;
  }
  
  /// Verify if a range has been specified
  bool HasRange()
  {
    return (fMinEq != -1 && fMaxEq != -1);
  }

  /// filter out the equations which are out of the range
  static void FilterEquations(TPZVec<int> &origindex, TPZVec<int> &destindex, int mineq, int upeq);

  /** 
   * Assemble the global system of equation into mat and rhs.
   * A set with material ids may be provided in order to integrate
   * a few materials only (param MaterialIds). If MaterialIds == NULL
   * all elements will be computed.
   */
  static void Assemble(TPZMatrix & mat, TPZFMatrix & rhs, 
                       TPZCompMesh &mesh, 
                       int mineq = -1,int maxeq = -1, 
                       std::set<int> *MaterialIds = NULL);

  /** 
   * Assemble the global system of equation into rhs.
   * A set with material ids may be provided in order to integrate
   * a few materials only (param MaterialIds). If MaterialIds == NULL
   * all elements will be computed.
   */
  static void Assemble(TPZFMatrix & rhs, 
                       TPZCompMesh &mesh, 
                       int mineq = -1, int maxeq = -1, 
                       std::set<int> *MaterialIds = NULL);

protected:

  /**
   * @supplierCardinality 1 
   */
  TPZCompMesh * fMesh;
  
  /** Equation range for assembly of the global matrix
   */
  int fMinEq, fMaxEq;
};
#endif //TPZSTRUCTMATRIX_H
