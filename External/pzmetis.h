// Generated by Together

#ifndef TPZMETIS_H
#define TPZMETIS_H

#include "pzrenumbering.h"
#include <iostream>


class TPZMetis : public TPZRenumbering {
public:
  void Resequence(TPZVec<int> &perm, TPZVec<int> &inverseperm);
/**This method declares the element graph to the object
The first vector contains the element node number
The second vector contains the index where to find the first node number 
of each element
the size of second vector is fNElements+1*/
  void SetElementGraph(TPZVec<int> &elgraph, TPZVec<int> &elgraphindex);
/**Sets the number of equations associated with each node
The derived class may or may not take this data into 
consideration*/
  void SetNodeWeights(TPZVec<int> &weights);
/**This will reset all datastructures the object may contain.
Node resequencing algorithms may require a possibly large 
amount of temporary data*/
virtual void ClearDataStructures();
private:
/**Number of equations associated with each node*/
  TPZVec<int> fNodeWeights;
/**Node number of each element*/
  TPZVec<int> fElementGraph;
/**Indicates for each element the index of the first entry with
fElementGraph for that element
Size of the vector fNElements+1*/
  TPZVec<int> fElementGraphIndex;
public:
/**Instantiates an object which will compute the resequencing
scheme of the metis package*/
  TPZMetis(int NElements, int NNodes);
  virtual ~TPZMetis() {}
  void Print(std::ostream &out);
  void Print(std::ostream &out,char * title);
};

#endif //TPZMETIS_H










